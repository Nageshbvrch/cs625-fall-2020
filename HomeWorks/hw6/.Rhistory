print(summary(newdatalist[-1:-5,]))
print(summary(data1[-1:-5,]))
ggplot(long, aes(x=Var2, y=value)) + geom_boxplot() + geom_point()+
labs(title = "Boxplot: Mask Usage Response", y ="Percentage", x= "Response to usage of mask")
data1 <- read.csv(file = "C:/Users/alla/Desktop/Nagesh/CS625/cs625-fall-2020/HomeWorks/hw5-distributions-Nageshbvrch/mask-use-by-county.csv", row.names = 1)
mat1 <- as.matrix(data1)
#library(ggplot2)
library(reshape2)
long <- melt(mat1)
head(long)
ggplot(long, aes(x=Var2, y=value)) + geom_boxplot() + geom_point()+
labs(title = "Boxplot: Mask Usage Response", y ="Percentage", x= "Response to usage of mask")
library(tidyverse)
ggplot(long, aes(x=Var2, y=value)) + geom_boxplot() + geom_point()+
labs(title = "Boxplot: Mask Usage Response", y ="Percentage", x= "Response to usage of mask")
print(summary(data1[-1:-5,]))
Q2. 2. Which plane <p style="color:red" > (tailnum) /p> (tailnum) has the worst on-time record?
prtnt("Q2. 2. Which plane <p style="color:red" > (tailnum) /p> (tailnum) has the worst on-time record?")
print('Q2. 2. Which plane <p style="color:red" > (tailnum) /p> (tailnum) has the worst on-time record?')
Q1. 4. Look at the number of cancelled flights per day. Is there a pattern? Is the proportion of cancelled flights related to the average delay?
library(nycflights13)
library(tidyverse)
library(nycflights13)
library(tidyverse)
filter(flights, month == 1, day == 1)
filter(flights) #, month == 1, day == 1)
flights
flights
flights.info()
flights.info()
flights
filter(flights,  , arr_delay )
filter(flights)
filter(flights, dep_delay , arr_delay )
#library(dplyr)
#library(nycflights13)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
ggplot(diamonds) +
geom_freqpoly(aes(x = price), binwidth = 10) +
xlim(c(1000, 2000))
library(nycflights13)
library(tidyverse)
flights
by_day <- group_by(flights, year, month, day)
summarise(by_day, Avgdelay = mean(dep_delay, na.rm = TRUE))
#filter(flights,  is.na(dep_delay))
cancel<-mutate(flights, cancelled = is.na(dep_delay) )
by_day<-group_by(cancel,  day)
df<-summarise(by_day, Avgdelay= mean(dep_delay, na.rm = TRUE),
n = n(), NoOfCancelled = sum(cancelled),
PropOfCancelled = mean(cancelled) )
head(df)
ggplot(data = df, mapping = aes(x = Avgdelay, y = PropOfCancelled)) +
geom_point() +
geom_smooth(se = FALSE)
group_by(flights, tailnum) %>%
summarise(onTime=mean(arr_delay)) %>%
filter(rank(desc(onTime)) <= 10)
group_by(flights, dest) %>%
summarise( count = n(),
Totaldelay=sum(arr_delay, na.rm = TRUE ))%>%
filter(rank(desc(Totaldelay)) <= 5)
by_dest <- group_by(flights, dest)
Totaldelay <- summarise(by_dest,
count = n(),
Totaldelay = sum(arr_delay, na.rm = TRUE)
)
Totaldelay %>% slice_min(Totaldelay, n= 5)
diamonds
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 10)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 5000)
ggplot(diamonds) +
geom_freqpoly(aes(x = price), binwidth = 10) +
xlim(c(1000, 2000))
#print(summary(diamonds[-1:-5,]))
pri<-select(diamonds, price)
summary(pri)
unusual <- diamonds %>%
filter( price > 18500) %>%
#filter( price < 1000) %>%
select(price) %>%
arrange(price)
unusual
unusual <- diamonds %>%
#filter( price > 18000) %>%
filter( price < 500) %>%
select(price) %>%
arrange(price)
unusual
diamonds %>%
count(carat== 0.99, carat==1)
ggplot(diamonds) +
geom_histogram(aes(x = carat)) +
xlim(c(0.97, 1.03))
flights %>%
mutate(cancelled = is.na(dep_time) | is.na(arr_time)) %>%
filter(cancelled) %>%
select(dep_time, arr_time)
flights %>%
mutate(cancelled = is.na(dep_time) | is.na(arr_time)) %>%
ggplot(mapping = aes(colour = cancelled)) +
geom_boxplot(aes(y = cancelled, x = dep_time/60))+  labs(title = 'Cancelled vs non-cancelled flights',
x = 'Departure time in hours',
y = 'Cancelled: TRUE/FALSE')
ggplot(data = diamonds, mapping = aes(x = carat, y = price) ) +
geom_point(alpha=0.5) +
geom_smooth(se = FALSE)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxplot()
#smaller <- diamonds %>%
# filter(carat < 3)
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.5)))
diamonds %>%
count(cut, clarity) %>%
ggplot(aes(clarity, cut, fill = n)) +
geom_tile()
smaller <- diamonds %>%
filter(carat < 3)
# install.packages("hexbin")
ggplot(data = smaller) +
geom_hex(mapping = aes(x = carat, y = price))
print(summary(diamonds[-1:-5,]))
diamonds
head(diamonds)
ggplot(data = diamonds, mapping = aes(x = carat, y = price) ) +
geom_point(alpha=0.5) +
geom_smooth(se = FALSE)
#smaller <- diamonds %>%
# filter(carat < 3)
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.5)))
ggplot(diamonds) +
geom_point(aes(x = depth, y = price), color = "blue", alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = color, y = price), color = "blue", alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = color, y = price), color = " ", alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = color, y = price), color = '', alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = color, y = price), color = 'red', alpha = 0.5)
ggplot(data = diamonds, mapping = aes(x = depth, y = price)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxplot()
ggplot(diamonds) +
geom_point(aes(x = depth, y = price), color = 'red', alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = table, y = price), color = "blue", alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = x, y = price), color = "blue", alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = x | x= y|x=z, y = price), color = "blue", alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = x , y = price), color = "blue", alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = x , y = price), color = "green", alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = x , y = price), alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = y , y = price), alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = z , y = price), alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = x , y = price), alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = z , y = price), alpha = 0.5)
ggplot(diamonds) +
geom_point(aes(x = x , y = price), alpha = 0.5)
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point()
ggplot(data = diamonds, mapping = aes(x = carat, y = cut)) +
geom_point()
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxplot()
#smaller <- diamonds %>%
# filter(carat < 3)
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.5)))
ggplot(data = diamonds, mapping = aes(x = carat, y = cut)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = carat, y = cut)) +
GeomBar()
ggplot(data = diamonds, mapping = aes(x = carat, y = cut)) +
geom_bar()
ggplot(data = diamonds, mapping = aes(x = carat, y = cut)) +
geom_point()
ggplot(data = diamonds, mapping = aes(x = carat, y = cut)) +
geom_area()
ggplot(data = diamonds, mapping = aes(x = carat, y = cut)) +
geom_line()
ggplot(data = diamonds, mapping = aes(x = carat, y = cut)) +
geom_histogram()
ggplot(data = diamonds, mapping = aes(y = carat, x = cut)) +
geom_histogram()
library(lvplot)
library(ggstance)
library(lvplot)
library(ggstance)
library(lvplot)
library(ggstance)
library(lvplot)
library(ggstance)
#library(lvplot)
ggplot(diamonds) + geom_lv(aes(x = cut, y = price))
library(ggstance)
#library(lvplot)
#ggplot(diamonds) + geom_lv(aes(x = cut, y = price))
ggplot(diamonds) +
geom_violin(aes(x = cut, y = price))
library(ggstance)
#library(lvplot)
#ggplot(diamonds) + geom_lv(aes(x = cut, y = price))
ggplot(diamonds) +
geom_violin(aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds) +
geom_violin(aes(x = carat, y = cut))
library(ggstance)
ggplot(diamonds) +
geom_violin(aes(y = carat, x = cut))
library(ggstance)
ggplot(diamonds) +
geom_violin(aes(x = carat, y = cut))
library(ggstance)
ggplot(diamonds) +
geom_lv(aes(x = carat, y = cut))
#library(ggstance)
library(lvplot)
#library(ggstance)
library(lvplot)
ggplot(data = diamonds, mapping = aes(x = carat, y = cut)) +
geom_boxplot()+ coord_flip()
ggplot(data = diamonds, mapping = aes(y = carat, x = cut)) +
geom_boxplot()+ coord_flip()
library(ggstance)
ggplot(diamonds) +
geom_violin(aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(carat, 0.5))) +
geom_violin(aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(carat, 10))) +
geom_violin(aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(carat, 1))) +
geom_violin(aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(carat, 0.8))) +
geom_violin(aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(carat, 0.9))) +
geom_violin(aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(carat, 2))) +
geom_violin(aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(carat, 1.5))) +
geom_violin(aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(carat, 1))) +
geom_violin(aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(carat, 1))) +
geom_violin(aes(x = cut, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(cut, 1))) +
geom_violin(aes(x = cut, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(cut, 1)), colorspaces) +
geom_violin(aes(x = cut, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(cut, 1)), color = "blue") +
geom_violin(aes(x = cut, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(cut, 1), color = "blue")) +
geom_violin(aes(x = cut, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(group = cut_width(cut, 1), color = "red")) +
geom_violin(aes(x = cut, y = price))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.5)))
library(ggstance)
ggplot(diamonds, mapping = aes( color = "red")) +
geom_violin(aes(x = cut, y = price))
ggplot(data = diamonds, mapping = aes(x = carat, y = price, color = cut_number(carat, 5)))) +
ggplot(data = diamonds, mapping = aes(x = carat, y = price, color = cut_number(carat, 0.5)))) +
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.5)))
library(ggstance)
ggplot(diamonds, mapping = aes(color = "red", fill = cut())) +
geom_violin(aes(x = cut, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(color = "red", fill = cut) +
geom_violin(aes(x = cut, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(color = "red")) +
geom_violin(aes(x = cut, y = price,  fill = cut))
library(ggstance)
ggplot(diamonds) +
geom_violin(aes(x = cut, y = price,  fill = cut))
diamonds %>%
count(cut, clarity) %>%
ggplot(aes(clarity, cut, fill = n)) +
geom_tile()
smaller <- diamonds %>%
filter(carat < 3)
# install.packages("hexbin")
ggplot(data = smaller) +
geom_hex(mapping = aes(x = carat, y = price))
diamonds %>%
ggplot(aes(x = cut, y = price, fill = cut)) +
geom_lv()
diamonds %>%
ggplot(aes(x = cut, y = price, fill = cut)) +
geom_lv()
library(ggstance)
ggplot(diamonds) +
geom_violin(aes(x = cut, y = price,  fill = cut))
library(ggstance)
ggplot(diamonds) +
geom_violin(aes(x = cut, y = price,  fill = cut))+guides(fill=FALSE)
library(ggstance)
ggplot(diamonds) +
geom_violin(aes(x = cut, y = price,  fill = cut))
library(ggstance)
ggplot(diamonds) +
geom_violin(aes(x = cut, y = price,  fill = cut))+guides(fill=FALSE)
diamonds %>%
filter(carat < 3) %>%
ggplot(aes(x = carat)) +
geom_density_ridges(aes(y  = cut_width(price, 2000), fill = cut_width(price, 2000))) +
theme_ridges() +
guides(fill = FALSE)
diamonds %>%
filter(carat < 2.5) %>%
ggplot(aes(x = price)) +
geom_density(aes(color = cut_width(carat, 0.25)))
diamonds %>%
filter(carat < 5) %>%
ggplot(aes(x = price)) +
geom_density(aes(color = cut_width(carat, 0.5)))
diamonds %>%
filter(carat < 3) %>%
ggplot(aes(x = price)) +
geom_density(aes(color = cut_width(carat, 0.5)))
diamonds %>%
filter(carat < 3) %>%
ggplot(aes(x = price)) +
geom_density(aes(color = cut_width(carat, 0.1)))
diamonds %>%
filter(carat < 2) %>%
ggplot(aes(x = price)) +
geom_density(aes(color = cut_width(carat, 0.5)))
diamonds %>%
filter(carat < 3) %>%
ggplot(aes(x = price)) +
geom_density(aes(color = cut_width(carat, 0.5)))
diamonds %>%
count(cut, price) %>%
ggplot(aes(price, cut, fill = n)) +
geom_tile()
diamonds %>%
count(cut, carat) %>%
ggplot(aes(carat, cut, fill = n)) +
geom_tile()
diamonds %>% ggplot() +
geom_boxplot(mapping = aes(x = cut, y = price,
color = cut_number(carat, 5)))
diamonds %>% ggplot() +
geom_boxplot(mapping = aes(x = cut, y = price,
color = cut_number(carat, 1)))
diamonds %>% ggplot() +
geom_boxplot(mapping = aes(x = cut, y = price,
color = cut_number(carat, 2)))
diamonds %>% ggplot() +
geom_boxplot(mapping = aes(x = cut, y = price,
color = cut_number(carat, 3)))
smaller <- diamonds %>%
filter(carat < 3)
# install.packages("hexbin")
ggplot(data = smaller) +
geom_hex(mapping = aes(x = carat, y = price))
library(ggstance)
ggplot(diamonds, mapping = aes(color = cut_number(carat, 3))) +
geom_violin(aes(x = cut, y = price,  fill = cut))+guides(fill=FALSE)
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, y = price,
color = cut_number(carat, 3)))
diamonds %>% ggplot() +
geom_histogram(mapping = aes(x = cut, y = price,
color = cut_number(carat, 3)))
diamonds %>% ggplot(mapping = aes(x = cut, y = price,
color = cut_number(carat, 3))) +
geom_histogram()
diamonds %>% ggplot(mapping = aes(x = cut, y = price,
color = cut_number(carat, 3))) +
geom_histogram(diamonds)
diamonds %>% ggplot(mapping = aes(x = cut, y = price,
color = cut_number(carat, 3))) +
geom_histogram(mapping = aes(count(cut))
diamonds %>% ggplot(mapping = aes(x = cut, y = price,
color = cut_number(carat, 3))) +
geom_histogram(mapping = aes(x = cut)
diamonds %>% ggplot(mapping = aes(x = cut, y = price,
color = cut_number(carat, 3))) +
geom_histogram(mapping = aes(x = cut, bins=10)
diamonds %>% ggplot(mapping = aes(
color = cut_number(carat, 3))) +
geom_histogram(mapping = aes(x = cut, bins=10)
diamonds %>% ggplot() +
geom_histogram(mapping = aes(x = cut, bins=10)
diamonds %>% ggplot() +
geom_histogram(mapping = aes(x = cut, bins=10))
diamonds %>% ggplot(mapping = aes(x = cut, y = price)) +
geom_histogram(mapping = aes(x = cut, bins=10))
#diamonds %>% ggplot() +
# geom_boxplot(mapping = aes(x = cut, y = price,
#                           color = cut_number(carat, 3)))
ggplot(diamonds, color = cut_number(carat, 3)) +
geom_histogram(aes(x = cut, y = price)) +
xlim(c(0.97, 1.03))
#diamonds %>% ggplot() +
# geom_boxplot(mapping = aes(x = cut, y = price,
#                           color = cut_number(carat, 3)))
ggplot(diamonds, color = cut_number(carat, 3)) +
geom_histogram(aes(x = cut, y = price)) +
#xlim(c(0.97, 1.03))
